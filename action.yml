name: 'SF2 Competition runner'
description: 'Reports image compression results for the SF2 competition'
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      shell: bash
      run: |
        pip install "$GITHUB_ACTION_PATH" -q
        echo "::remove-matcher owner=python::"
        echo "::add-matcher::$GITHUB_ACTION_PATH/python.json"
    - name: Run competition checker
      shell: bash
      id: checker 
      run: |
        cued_sf2_compete competition \
          --required cued-sf2://lighthouse.mat \
          --required cued-sf2://bridge.mat \
          --required cued-sf2://flamingo.mat \
          cued-sf2://competition/2018.mat \
          cued-sf2://competition/2019.mat \
          cued-sf2://competition/2020.mat \
          cued-sf2://competition/2021.mat
    - name: Prepare results repository
      uses: actions/checkout@v3
      if: ${{ always() && hashFiles('competition/outputs/summary.md') != '' }}
      with:
        path: outputs
    - name: Upload images
      if: ${{ always() && hashFiles('competition/outputs/summary.md') != '' }}
      shell: bash
      run: |
        git config --global user.name "$(git --no-pager log --format=format:'%an' -n 1)"
        git config --global user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
        cd outputs
        git checkout --orphan "images-$GITHUB_SHA"
        git rm -rf .
        cp -r ../competition/outputs/. .
        rm .gitignore
        git add .
        git commit -m "Images for $GITHUB_REPOSITORY@$GITHUB_SHA"
        git push origin HEAD:refs/images/for-$GITHUB_SHA -f
        echo "Uploaded to: $(git rev-parse HEAD)"
        # replace the relative urls with absolute urls
        cat summary.md \
          | sed -e "s@src=\"./@src=\"https://github.com/$GITHUB_REPOSITORY/blob/$(git rev-parse HEAD)/@g" \
          | sed -e "s@href=\"./@href=\"https://github.com/$GITHUB_REPOSITORY/blob/$(git rev-parse HEAD)/@g" \
          > $GITHUB_STEP_SUMMARY
    - uses: actions/github-script@v6
      if: ${{ always() && hashFiles('competition/outputs/summary.md') != '' }}
      env:
        RMS: ${{ steps.checker.outputs.RMS }}
      with:
        script: |
          try {
            const set_points = require(process.env.GITHUB_ACTION_PATH + '/set_points.js')
            const RMS = JSON.parse(process.env.RMS)
            const RMS_str = `${(RMS['lighthouse'] * 10).toFixed(0)}/10`
            console.log(RMS_str)
            await set_points({github, context, core}, RMS_str)
          } catch (e) {}
